import { BufferComposer, ComposableBuffer } from '@defichain/jellyfish-buffer';
/**
 * CreateMasternode DeFi Transaction
 */
export interface CreateMasternode {
    operatorType: number;
    operatorPubKeyHash: string;
    timelock?: number;
}
/**
 * Composable CreateMasternode, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CCreateMasternode extends ComposableBuffer<CreateMasternode> {
    static OP_CODE: number;
    static OP_NAME: string;
    composers(cmn: CreateMasternode): BufferComposer[];
}
/**
 * ResignMasternode DeFi Transaction
 */
export interface ResignMasternode {
    nodeId: string;
}
/**
 * Composable ResignMasternode, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CResignMasternode extends ComposableBuffer<ResignMasternode> {
    static OP_CODE: number;
    static OP_NAME: string;
    composers(cmn: ResignMasternode): BufferComposer[];
}
export interface UpdateMasternodeAddress {
    addressType: number;
    addressPubKeyHash?: string;
}
/**
 * Composable UpdateMasternodeAddress, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CUpdateMasternodeAddress extends ComposableBuffer<UpdateMasternodeAddress> {
    composers(umn: UpdateMasternodeAddress): BufferComposer[];
}
interface UpdateMasternodeData {
    updateType: number;
    address: UpdateMasternodeAddress;
}
/**
 * Composable UpdateMasternodeData, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CUpdateMasternodeData extends ComposableBuffer<UpdateMasternodeData> {
    composers(umn: UpdateMasternodeData): BufferComposer[];
}
/**
 * UpdateMasternode DeFi Transaction
 */
export interface UpdateMasternode {
    nodeId: string;
    updates: UpdateMasternodeData[];
}
/**
 * Composable UpdateMasternode, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CUpdateMasternode extends ComposableBuffer<UpdateMasternode> {
    static OP_CODE: number;
    static OP_NAME: string;
    composers(umn: UpdateMasternode): BufferComposer[];
}
export {};
//# sourceMappingURL=dftx_masternode.d.ts.map